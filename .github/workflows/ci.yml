# (base: https://github.com/actions/starter-workflows/blob/a8bbec520078bf8f6c85a31ca4e7ea3751ab35b3/ci/docker-image.yml)
name: Docker Image CI

on:
  push:
    paths:
      - Dockerfile
      - .github/workflows/ci.yml
  pull_request:
    paths:
      - Dockerfile
      - .github/workflows/ci.yml
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Make nginx.conf
      run: |
        cat > nginx.conf <<EOF
        worker_processes  1;

        events {
            worker_connections  1024;
        }

        http {
            server {
                # Enable QUIC and HTTP/3.
                listen 443 quic reuseport;
            
                # Enable HTTP/2 (optional).
                listen 443 ssl http2;

                ssl_certificate      /etc/ssl/certs/fullchain.pem;
                ssl_certificate_key  /etc/ssl/private/privkey.pem;

                # Enable "new" TLS versions (TLSv1.3 is required for QUIC).
                ssl_protocols TLSv1.2 TLSv1.3;

                # Add Alt-Svc header to negotiate HTTP/3.
                add_header alt-svc 'h3=":443"; ma=86400, h3-29=":443"; ma=86400';
                pagespeed on;                                                                                                                                                                                                                         
                pagespeed FileCachePath /var/ngx_pagespeed_cache;                                                                                                                                                                                                                                                                                                                                                                                                                           
                
                brotli on;                                                                                                                                                                                                                            
                brotli_comp_level 6;

                brotli_static on;                                                                                                                                                                                                                     
                brotli_types application/atom+xml application/javascript application/json application/rss+xml                                                                                                                                                      
                application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype                                                                                                                                                 
                application/x-font-ttf application/x-javascript application/xhtml+xml application/xml                                                                                                                                                 
                font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon                                                                                                                                                  
                image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml; 
            }
        }
        EOF
        
    - name: Make SSL certificates
      run: |
        set -eu
        SSL_CERTS_PATH=./docker_volumes/ssl_certs
        mkdir -p $SSL_CERTS_PATH
        openssl req  -nodes -new -x509 -subj '/CN=*' -sha256 -keyout $SSL_CERTS_PATH/privkey.pem -out $SSL_CERTS_PATH/fullchain.pem -days 365000
        
    # TODO: Make "Install HTTP/3 client" and "Build Docker image" parallel
    
    - name: Build Docker image
      run: docker build -t nginx-http3:latest .
          
    - name: Show Nginx version
      run: docker run --rm nginx-http3:latest /usr/sbin/nginx -V

    - name: HTTP/3 curl Install
      run: |
       git clone --depth 1 --recursive https://github.com/nibanks/msh3
       cd msh3 && mkdir build && cd build
       cmake -G 'Unix Makefiles' -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
       cmake --build .
       cmake --install .
       git clone https://github.com/curl/curl
       cd curl
       autoreconf -fi
       ./configure LDFLAGS="-Wl,-rpath,/usr/local/lib" --with-msh3=/usr/local --with-openssl
       make
       make install

    - name: Install HTTP/3 client
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        set -eu
        # Install Rust
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        # Build HTTP/3 client
        git clone --recursive https://github.com/cloudflare/quiche.git
        cd quiche
        # Show current revision
        # (from: https://stackoverflow.com/questions/5724513/in-git-how-do-i-figure-out-what-my-current-revision-is/5724755#5724755)
        git rev-parse HEAD
        cargo build --examples
        
    - name: Run HTTP/3 server
      run: |
        docker run -d -p 443:443 -p 443:443/udp \
          -v $PWD/nginx.conf:/usr/local/nginx/conf/nginx.conf \
          -v $PWD/docker_volumes/ssl_certs/fullchain.pem:/etc/ssl/certs/fullchain.pem \
          -v $PWD/docker_volumes/ssl_certs/privkey.pem:/etc/ssl/private/privkey.pem \
          nginx-http3
      
    - name: HTTP/3 connection test
      run: |
        curl -L --insecure --http3 https://localhost -I -p
