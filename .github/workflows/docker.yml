# (base: https://github.com/actions/starter-workflows/blob/a8bbec520078bf8f6c85a31ca4e7ea3751ab35b3/ci/docker-image.yml)
name: Docker Image CI

on:
  push:
    paths:
      - Dockerfile
      - .github/workflows/docker.yml
  pull_request:
    paths:
      - Dockerfile
      - .github/workflows/docker.yml
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
      - uses: actions/checkout@v3
    
      - name: Make nginx.conf
        run: |
         cat > nginx.conf <<EOF
         worker_processes  1;
 
         events {
             worker_connections  1024;
         }

         http {
             server {
                 # Listen.
                 listen 127.0.0.1:443 ssl http2 http3 reuseport;
 
                 ssl_certificate      /etc/ssl/certs/fullchain.pem;
                 ssl_certificate_key  /etc/ssl/private/privkey.pem;
 
                 # Enable "new" TLS versions (TLSv1.3 is required for QUIC).
                 ssl_protocols TLSv1.2 TLSv1.3;
 
                 pagespeed on;                                                                                                                                                                                                                         
                 pagespeed FileCachePath /var/ngx_pagespeed_cache;                                                                                                                                                                                                                                                                                                                                                                                                                           
                 
                 brotli on;                                                                                                                                                                                                                            
                 brotli_comp_level 6;
                 brotli_static on;
 
                # Add Alt-Svc header to negotiate HTTP/3.
                add_header alt-svc 'h3=":443"; ma=86400, h3-29=":443"; ma=86400';
             }
         }
         EOF
        
      - name: Make SSL certificates
        run: |
         set -eu
         SSL_CERTS_PATH=./docker_volumes/ssl_certs
         mkdir -p $SSL_CERTS_PATH
         openssl req  -nodes -new -x509 -subj '/CN=*' -sha256 -keyout $SSL_CERTS_PATH/privkey.pem -out $SSL_CERTS_PATH/fullchain.pem -days 365000

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64 #,linux/arm64 #,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ github.ref_name }}
          build-args: |
                "GEOIP2_ACCOUNT_ID=${{ secrets.MAXMIND_ID }}"
                "GEOIP2_LICENSE_KEY=${{ secrets.MAXMIND_KEY }}"

      - name: Show Nginx version
        run: docker run --rm nginx-http3:latest /usr/sbin/nginx -V
        
      - name: Run HTTP/3 server
        run: |
          docker run -d -p 443:443/udp \
            -v $PWD/nginx.conf:/usr/local/nginx/conf/nginx.conf \
            -v $PWD/docker_volumes/ssl_certs/fullchain.pem:/etc/ssl/certs/fullchain.pem \
            -v $PWD/docker_volumes/ssl_certs/privkey.pem:/etc/ssl/private/privkey.pem \
            nginx-http3
      
      - name: HTTP/3 connection test
        run: |
         docker run --rm --net host ymuski/curl-http3 curl -L --insecure --http3 https://127.0.0.1:443 -I -p
